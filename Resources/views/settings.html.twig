{% extends '@Approval/layout.html.twig' %}

{% block report_title %}{{ report_title|trans({}, 'ApprovalBundle') }}{% endblock %}

{% block report %}

    <div class="row">
        <div class="col-md-12">
            <div class="nav-tabs-custom">
                <div class="tab-content">
                    {{ form_start(form) }}
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function () {
            // ToDo: How to get the domain, username and password from the settings?
            const domain = 'http://localhost';
            const apiUsername = 'TestAdmin'
            const apiPassword = 'test1234'
            const callKimaiApi = (method, successHandler, errorHandler) => {
                $.ajax({
                    url: `${domain}/api/${method}`,
                    type: 'GET',
                    beforeSend: function (request) {
                        request.setRequestHeader("X-AUTH-USER", apiUsername);
                        request.setRequestHeader("X-AUTH-TOKEN", apiPassword);
                    },
                    headers: {
                        'X-AUTH-USER': apiUsername,
                        'X-AUTH-TOKEN': apiPassword,
                    },
                    success: successHandler,
                    error: errorHandler
                });
            }

            function removeOptions(selectElement) {
                let i, L = selectElement.options.length - 1;
                for(i = L; i >= 0; i--) {
                    selectElement.remove(i);
                }
            }

            // ToDo: How to get the dropdown ids from the settings?
            const dropdownProjectHolidays = $('#settings_form_project_holidays').length ? $('#settings_form_project_holidays')[0] : null;
            const dropdownActivityHolidays = $('#settings_form_activity_for_holidays').length ? $('#settings_form_activity_for_holidays')[0] : null;
            const dropdownProjectVacations = $('#settings_form_project_vacations').length ? $('#settings_form_project_vacations')[0] : null;
            const dropdownActivityVacations = $('#settings_form_activity_for_vacations').length ? $('#settings_form_activity_for_vacations')[0] : null;
            if(!dropdownProjectHolidays || !dropdownProjectVacations || !dropdownActivityHolidays || !dropdownActivityVacations) {
                console.error('One or mote dropdowns not found', {dropdownProjectHolidays, dropdownActivityHolidays, dropdownProjectVacations, dropdownActivityVacations});
            }

            dropdownProjectHolidays.onchange = function(e) {
                console.log('Project holidays changed', e.currentTarget.value);
                const projectId = e.currentTarget.value;
                if (!projectId) {
                    console.error('Project ID not found');
                    return;
                }
                callKimaiApi(`activities?project=${projectId}`, function(data) {
                    console.log('Success', data);
                    removeOptions(dropdownActivityHolidays);
                    for(const item of data) {
                        console.log(item);
                        dropdownActivityHolidays.add(new Option(item.name, item.id));
                    }
                }, function(error) {
                    console.error('Error', error);
                });
            };

            dropdownProjectVacations.onchange = function(e) {
                console.log('Project vacations changed', e.currentTarget.value);
                const projectId = e.currentTarget.value;
                if(!projectId) {
                    console.error('Project ID not found');
                    return;
                }
                callKimaiApi(`activities?project=${projectId}`, function(data) {
                    console.log('Success', data);
                    removeOptions(dropdownActivityVacations);
                    for(const item of data) {
                        dropdownActivityVacations.add(new Option(item.name, item.id));
                    }
                }, function(error) {
                    console.error('Error', error);
                });
            };
        });
    </script>
{% endblock %}
